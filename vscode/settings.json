{
    "breadcrumbs.enabled": true,
    "editor.minimap.enabled": false,
    // "editor.fontLigatures": true,
    "editor.suggestSelection": "first",
    "editor.multiCursorModifier": "ctrlCmd",
    "editor.snippetSuggestions": "top",
    "files.trimTrailingWhitespace": false,
    "files.trimFinalNewlines": true,
    "files.insertFinalNewline": true,
    "terminal.integrated.fontFamily": "Source Code Pro for Powerline",
    // "terminal.integrated.fontFamily": "Hack Nerd Font",
    // "terminal.integrated.shell.osx": "/bin/zsh",
    "terminal.integrated.copyOnSelection": true,
    // "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "workbench.colorTheme": "Atom One Dark",
    "window.zoomLevel": 0,
    // "workbench.fontAliasing": "auto",
    // "workbench.colorCustomizations": {},
    // "python.jediEnabled": false,
    // Specific config by language
    "[go]": {
        "editor.snippetSuggestions": "none",
        "editor.formatOnSave": true,
    },
    "[python]": {
        "editor.rulers": [
            79
        ]
    },
    "[proto, proto3]": {
        "editor.defaultFormatter": "xaver.clang-format",
        "editor.formatOnSave": false,
    },
    "[sql]": {
        "editor.formatOnSave": false,
        "files.insertFinalNewline": false,
        "editor.defaultFormatter": "mtxr.sqltools"
    },
    "go.delveConfig": {
        "dlvLoadConfig": {
            "followPointers": true,
            "maxVariableRecurse": 1,
            "maxStringLen": 200,
        }
    },
    // ----- EXTENSIONS -----
    // (extension) To-Do tree
    "todo-tree.highlights.enabled": false,
    // todo-tree.general.tags adds the next tags to the TODO tree (sidebar)
    "todo-tree.general.tags": [
        "TODO",
        "FIXME",
        "NOTE",
        "HOWTO",
    ],
    // todo-tree.general.customHighlight adds styles to the TODO tree (sidebar)
    "todo-tree.highlights.customHighlight": {
        // https://github.com/Gruntfuggly/todo-tree
        "TODO": {
            "type": "tag",
            "background": "yellow",
            "opacity": 85,
        },
        "FIXME": {
            "type": "tag",
            "background": "#E979B2",
            "icon": "tools",
            "opacity": 85,
        },
        "NOTE": {
            "icon": "book", // https://octicons.github.com/
            "type": "text",
            "iconColour": "grey",
            "background": "white",
            "opacity": 60,
        },
        "HOWTO": {
            "icon": "book",
            "type": "text",
            "iconColour": "grey",
            "background": "white",
            "opacity": 60,
        },
    },
    // (extension) Better comments
    "better-comments.multilineComments": true,
    "better-comments.tags": [
        {
            "tag": "TODO",
            "color": "#FFAA01",
            "strikethrough": false,
            "backgroundColor": "transparent"
        },
        {
            "tag": "NOTE",
            "color": "#FFAA01",
            "strikethrough": false,
            "backgroundColor": "transparent"
        },
        // {
        //     "tag": "*",
        //     "color": "#98C379",
        //     "strikethrough": false,
        //     "backgroundColor": "transparent"
        // }
    ],
    "todo-tree.tree.showScanModeButton": false,
    // (extension) Clang-format
    "[proto3]": {
        "editor.defaultFormatter": "xaver.clang-format"
    },
    "clang-format.language.proto.enable": true,
    // (extension) Sync
    "sync.gist": "96c000cd39491f85f7bad4155f9d3eac",
    "sync.autoUpload": false,
    "sync.forceUpload": false,
    // (extension) Git
    "git.autofetch": false,
    // (extension) Gremlins tracker aka. '\u200b' tracker
    // The extension will track zero-width spaces: https://codepen.io/chriscoyier/pen/iLKwm
    // (extension) Git Lens
    "gitlens.currentLine.enabled": false,
    "gitlens.hovers.currentLine.over": "line",
    "gitlens.blame.avatars": false,
    "gitlens.codeLens.authors.enabled": false,
    "gitlens.hovers.enabled": false,
    // (extension) Golang
    "go.useLanguageServer": true,
    "go.lintOnSave": "file",
    "go.vetOnSave": "package",
    "go.lintFlags": [
        "--fast"
    ],
    "go.formatTool": "goimports",
    "go.formatFlags": [
        "-local=github.com/mx51"
    ],
    "go.toolsEnvVars": {
        "GOFLAGS": "-mod=vendor"
    },
    "go.enableCodeLens": {
        "references": false,
        "runtest": false
    },
    "go.gocodeFlags": [
        "-builtin",
        "-ignore-case",
        "-unimported-packages",
        "-exclude-docs"
    ],
    "go.lintTool": "golangci-lint",
    "go.autocompleteUnimportedPackages": true,
    "gopls": {
        "usePlaceholders": false, // add parameter placeholders when completing a function
    },
    "go.languageServerFlags": [
        "-rpc.trace", // for more detailed debug logging
    ],
    "go.languageServerExperimentalFeatures": {
        "format": false,
        "diagnostics": false,
        "documentLink": false
    },
    // ------------------
    // "go.testTags": "endtoend",
    // "go.buildTags": "endtoend integration",
    // // "window.zoomLevel": 0,`
    // "go.testEnvVars": {
    //     "DB_HOST": "localhost",
    // },
    // "go.formatTool": "goimports",
    // "go.gocodeFlags": [
    //     "-builtin",
    //     "-ignore-case",
    //     "-unimported-packages",
    //     "-exclude-docs"
    // ],
    // "go.lintOnSave": "package",
    // "go.lintTool": "golangci-lint",
    // "go.lintFlags": [
    //     "--fast",
    //     "-D",
    //     "scopelint"
    // ],
    // "go.testFlags": [
    //     "-count=1"
    // ],
    // "go.useLanguageServer": false,
    // ---
    // UNUSED EXTENSIONS
    // Fix imports on save.
    "emeraldwalk.runonsave": {
        "commands": [
            {
                "match": "\\.go$",
                "cmd": "fiximports ${file} && goimports -w -local=$AP_GITHUB ${file}",
                "cmd2": "goimports -w -local=$AP_GITHUB ${file}",
                "useShortcut": false,
                "silent": false
            }
        ]
    },
}

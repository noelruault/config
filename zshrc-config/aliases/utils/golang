#!/bin/bash

alias vimgo='vim -u ~/.vimrc.go'

# TODO:
# https://stackoverflow.com/a/30033822/4349318
alias gopath='cd $(go env GOPATH)'
alias gosrc='cd $(go env GOPATH)/src/'

### GOLANG
function gotest() {
    # if [[ "$1" == "color" ]]; then
    go test ./... -p 1 -count 1 -v |
        sed ''/PASS/s//$(printf "\033[32mPASS\033[0m")/'' |
        sed ''/FAIL/s//$(printf "\033[31mFAIL\033[0m")/'' # \
    ## | GREP_COLOR="01;33" egrep --color=always '\s*[a-zA-Z0-9\-_.]+[:][0-9]+[:]|^'
    # return

    if [[ "$1" == "e2e" ]]; then
        go test ./test/endtoend -tags=endtoend -count=1 -timeout 120s |
            sed ''/PASS/s//$(printf "\033[32mPASS\033[0m")/'' |
            sed ''/FAIL/s//$(printf "\033[31mFAIL\033[0m")/''
    fi
}

####
# USE: gocover -run TestUpdateSomethingExample -count=1
#
function gocover() {
    # go test route/to/test -run TestUpdateSomethingExample -count=1 -coverprofile cover.out; go tool cover -html=cover.out
    local t=$(mktemp -t cover)
    go test $COVERFLAGS -coverprofile=$t $@ && go tool cover -func=$t && unlink $t
}

# for pkg in *; do go test "./$pkg"; done
# go clean -testcache # https://golang.org/pkg/cmd/go/internal/clean/

function gonew() {
    mkdir -p $GOPATH/src/github.com/noelruault/$1 && cd $_
    {
        echo 'package main'
        echo 'import "fmt"'
        echo 'func main() { fmt.Println("hello") }'
    } > main.go

    go mod init github.com/noelruault/$1
    code .
}

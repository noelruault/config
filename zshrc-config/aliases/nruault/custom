#!/bin/bash

alias awesome='cat $ZSH_CUSTOM_CONFIG_FILES/nruault/assets/awesome.txt'
alias crypto\?='go run $ZSH_CUSTOM_CONFIG_FILES/aliases/nruault/assets/crypto.go &'

function check_noelio_domain() {
    # Checks for internet connectivity.
    if ping -q -c 1 -W 1 8.8.8.8 >/dev/null; then; else exit 1; fi

    domain_expiry_date=$(whois noel.io | grep "Registry Expiry Date" | grep -oE '(\d{4})-(\d\d)-(\d\d)' | sed 's/[\._-]//g')

    current_epoch_time=`date -jf %Y%m%d $(date +%Y%m%d) +%s`
    domain_expity_date_epoch=`date -jf %Y%m%d $domain_expiry_date +%s`

    days_until_expiration=$(( (domain_expity_date_epoch - current_epoch_time) / 86400 ))

    if [[ "$1" == "bash:request" ]]; then
        if ((days_until_expiration < 30)); then
            echo "DOMAIN ABOUT TO EXPIRE, $days_until_expiration days left."
        fi
    else
        echo "Domain expiration is $days_until_expiration days ahead."
    fi
    # exit 0
}

(check_noelio_domain "bash:request" &) # https://stackoverflow.com/a/7687722/4349318

alias noel.io\?='check_noelio_domain'


# CD ANYWHERE aliases
alias goto=go_to_dir_on_specific_folder # A $COMPANY_DIRECTORY needs to be configured

# go_to_dir_on_specific_folder will try to find a directory that matches
# with the given parameters inside of an specific folder.
#
# NOTE: WORK_FOLDER variable could be changed to something else, more specific
# and without evaluations or commands.
#
# Used uncommon commands :
# - https://ss64.com/bash/wc.html
# - https://ss64.com/bash/awk.html
# - Colors: https://www.tldp.org/HOWTO/Bash-Prompt-HOWTO/x329.html https://www.shellhacks.com/bash-colors/
function go_to_dir_on_specific_folder() {
    if env_var_is_empty $COMPANY_DIRECTORY; then
        echo "Environment variable COMPANY_DIRECTORY is not defined"
        return
    fi

    echo $pwd                                                        # TODO(nruault): Remove-me
    WORK_FOLDER=$(eval echo $(go env GOPATH)/src/$COMPANY_DIRECTORY) # eval will store the desired payments path.

    # If there is no arguments, just go to $COMPANY_DIRECTORY
    if [[ $# -eq 0 ]]; then
        cd $WORK_FOLDER
        return
    fi

    counter=$(find $WORK_FOLDER -type d -name "*$1*$2*" -print -maxdepth 1 | wc -l) # wc is used for counting the lines
    if (($counter == 0)); then
        # An inverted counter will try to find matches inverting the order of the params.
        inverted_counter=$(find $WORK_FOLDER -type d -name "*$2*$1*" -print -maxdepth 1 | wc -l)
        if (($inverted_counter > 0)); then
            # If something matches, will display the results in addition to a tip.
            echo "Better try \e[0;33m$2 $1\e[0m"
            echo "Found:\n\e[0;34m$(find $WORK_FOLDER -type d -name "*$2*$1*" -print -maxdepth 1 | awk -F/ '{print $NF}')\e[0m"
            return
        fi

        echo "No matches."
        return

    elif (($counter > 1)); then
        # AWK is used in the next command to get the name of the folder without the path
        # The parenthesis at the begining will make this an array.
        search=($(find $WORK_FOLDER -type d -name "*$1*$2*" -print -maxdepth 1 | awk -F/ '{print $NF}'))

        # This loop will check if the input matches exactly with the name of the folder,
        # if there is an exact match, will cd and end the function.
        for i in "${search[@]}"; do
            if [ $i = $1 ]; then
                cd $WORK_FOLDER$1
                return
            fi
        done

        # If more than one folder were found and there is not a clear candidate, print the results.
        # The loop is used to print them in different lines.
        for i in "${search[@]}"; do echo $i; done
        return
    else
        # If only one folder was found, change to the found directory
        # cd $WORK_FOLDER$(find $WORK_FOLDER -type d -name "*$1*$2*" -print -maxdepth 1 | awk -F/ '{print $NF}')

        ## TODO(nruault): REMOVE ME -----------------------
        FOLDER=$(find $WORK_FOLDER -type d -name "*$1*$2*" -print -maxdepth 1 | awk -F/ '{print $NF}')
        WORK_FOLDER=$(eval echo $(go env GOPATH)/src/$COMPANY_DIRECTORY)
        COM=$(find $WORK_FOLDER -type d -name "$FOLDER" -print -maxdepth 1 | awk -F/ '{print $NF}')
        if [ -z "$COM" ]; then
            cd $WORK_FOLDER$FOLDER
        fi
        cd $WORK_FOLDER$(find $WORK_FOLDER -type d -name "*$1*$2*" -print -maxdepth 1 | awk -F/ '{print $NF}')
        ## REMOVE ME -----------------------
    fi
}

function env_var_is_empty() {
    [ -z "$1" ]
}

#!/bin/bash

# IDEA: When using any of the commands existing below, the terminal should know that
# initialization is missing and display a message such as: "gcloud integration is not loaded,
# use `source_integrations gcloud` to load google cloud integration
# example:
# $ source_integrations aws nvm

## Timestamp
start=$(python3 -c 'from time import time; print(int(round(time() * 1000)))') # OSX

## Docker & K8S integrations are activated by default
source "$ZSH_CUSTOM_CONFIG_ALIASES/integrations/docker"
source "$ZSH_CUSTOM_CONFIG_ALIASES/integrations/kubernetes"

# brew install mysql mysql-client # It is important to include both, server and client
export PATH="/usr/local/opt/mysql-client/bin:$PATH"

## ----------- GCloud SDK -----------
if [[ "$*" == *gcloud* ]] || [ -z "$1" ]; then
  echo 'Loading GCloud integration'
  # The next line updates PATH for the Google Cloud SDK.
  if [ -f "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc" ]; then . "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"; fi
  # The next line enables shell command completion for gcloud.
  if [ -f "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc" ]; then . "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"; fi
fi

## ----------- NVM ------------------
if [[ "$*" == *nvm* ]] || [ -z "$1" ]; then
  # https://github.com/nvm-sh/nvm#uninstalling--removal
  # To remove nvm manually, execute the following:
  #   $ rm -rf "$NVM_DIR"
  echo 'Loading NVM integration'
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

## ----------- NPM ------------------
NPM_CONFIG_PREFIX=~/.npm-global

## ----------- AWS -------------------
if [[ "$*" == 'aws' ]]; then
  echo "Load AWS profiles by running 'export AWS_PROFILE=<development/production/personal>'"
  echo "All the profiles are sourced from '~/.aws/credentials'"
fi

## ----------- FLUTTER -------------------
if [[ "$*" == *flutter* ]] || [ -z "$1" ]; then
  echo 'Loading Flutter integration'
  [ -s "$HOME/flutter/bin/flutter" ] && export PATH="$PATH:$HOME/flutter/bin"  # This exports Flutter dir
fi

## Timestamp
end=$(python3 -c 'from time import time; print(int(round(time() * 1000)))');
runtime=$((end-start)); echo "Runtime of sourcing integrations was $runtime ms." # OSX
